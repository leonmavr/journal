##########################################################################################################
# This is a guide on how to set up and use the "pass" package to manage passwords with gpg encryption.
# see also: https://medium.com/@chasinglogic/the-definitive-guide-to-password-store-c337a8f023a1
##########################################################################################################
# if not done before, do this and use the same name and email as the imported key (see next command)
gpg2 --full-gen-key

# use the following command to import the signature (personal secret key) from another computerd structure:
gpg2 --import secret.gpg

# if a password directory is not created
makedir ~/.pass
cd ~/.pass

# then I can copy my pass files into this directory
cp -r ~/pass ~/.pass

# and initialise this as the pass directory using the import gpg key:
pass init .

# insert existing pwd
pass insert facebook.com

# show all passwords
pass

# generate random password for facebook.com
pass generate facebook.com 15

# show password for facebook.com on the terminal
pass facebook.com 

# copy password for facebook.com to clipboard
pass -c facebook.com 

# edit existing password
pass edit facebook.com

# change how long (sec) pass is copied to clipboard for, e.g. 120 sec
# $ vim ~/.bashrc
export PASSWORD_STORE_CLIP_TIME=120


##########################################################################################################
# Other tips
##########################################################################################################
# Encrypto and decrypt file with gpg
gpg --encrypt -r mary-geek@protonmail.com plain.txt # it will output plain.txt.asc
gpg --decrypt plain.txt.asc > plain.txt
